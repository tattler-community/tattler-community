image: python:3.10

test_py:
  coverage: '/^Code coverage:\s\d+\.\d+$/'
  cache:
    key: tattler_cache
    paths:
      - venv/
      - .cache/pip/
  script:
    # setup: base system
    - WD=$(pwd)
    - echo "Working directory is $WD"
    - echo "Creating venv ..."
    - test venv -nt .gitlab-ci.yml || python -m venv venv
    - . venv/bin/activate
    - pip install coverage
    ## server
    - echo "tattler server"
    - cd package/src/tattler/server
    - pip install -r docs/requirements_test.txt
    - pip freeze
    - cd sendable/tests
    - PYTHONPATH=.:${WD}/package/src coverage run -m unittest discover
    - cd ../../tests
    - LOG_LEVEL=debug PYTHONPATH=.:${WD}/package/src coverage run -m unittest discover
    ## client
    - echo "tattler client"
    - cd ../../client/tattler_py
    - pip install -r docs/requirements_test.txt
    - pip freeze
    - cd tests
    - LOG_LEVEL=debug PYTHONPATH=.:${WD}/package/src coverage run -m unittest discover
    - cd $WD
    ## print coverage information
    - coverage combine $WD/package/src/tattler/server/tests/.coverage $WD/package/src/tattler/server/sendable/tests/.coverage  $WD/package/src/tattler/client/tattler_py/tests/.coverage
    - printf 'Code coverage:\t' ; coverage report --omit='**/tests/**' --format=total --precision=2 ; echo ""
    ## documentation
    - cd package
    - version_package=$(awk -F= '/^version/ { print $2 }' pyproject.toml | grep -Eo '[0-9.]+')
    - cd src/tattler/docs
    - pip install -r requirements_docs.txt
    - make html
    - version_docs=$(awk -F= '/^release/ { print $2 }' source/conf.py | grep -Eo '[0-9.]+')
    - test -n "$version_package" -a "$version_package" = "$version_docs" || echo "Version numbers of package and docs are inconsistent! $version_package vs $version_docs ."
    - cd $WD
    ## packaging
    - echo "tattler server packaging"
    - cd package
    - pip install build
    - python -m build
    - pip install 'dist/tattler-1.1.0-py3-none-any.whl[Jinja]'
